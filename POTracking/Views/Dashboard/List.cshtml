@model PagedList<POT.DAL.vw_PO_Dashboard>
@using Webdiyer.WebControls.Mvc
@using POT.Services
@using HSG.Helper
@using System.Collections
@{ ViewBag.Title = "Dashboard"; Layout = Defaults.masterLayout;}
@section HeadContent { 
    <script src="@Url.Content("~/Content/Scripts/KO/knockout-2.2.0.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/Scripts/KO/knockout.mapping-latest.js")" type="text/javascript"></script>    
    <style>
    input[type="text"] {width:200px;}
    select {width:200px;}
    </style>
 }

@{ POT.DAL.vw_PO_Dashboard dSearch = ((POT.DAL.vw_PO_Dashboard)(ViewData["SearchData"]));
       object routeValues = new { qData = Request["qData"] };
       Dictionary<string, object> txtAttr = new Dictionary<string, object>();
       txtAttr.Add("class", "hdrTxt textBox");
       txtAttr.Add("onchange", "setFiltered(1,this);");
       bool isVendor = _Session.IsOnlyVendor;
       string userType = isVendor ? "Vendor" : "Internal";       
   }
    <form action="@Url.Content("~/Dashboard/Excel")" method="post" id="frmExcel" style="display:none" ><input type="submit" value="Export to Excel" class="button" id="btnExcel" onclick="return excelPostback(event);" /></form>       
    <table width="100%">
    <tr>
    <td><b class="smallHeading">Dashboard</b></td>
    <td class="sqz" align="right">@*Quick search: <input type="text" class="textBox" data-bind = "value:quickSearch" title="all filters except Date and won't apply for Excel export" /> *@</td>
    <td class="sqz" align="right">@*Html.ActionLink("New PO", "Manage", "PO", new { POId = 0}, null)&nbsp;*@</td>
    </tr>
        <tr>
            <td colspan="3">
            <!-- START: Search Panel -->
                <form action="@Url.Content("~/Dashboard/List")" method="post" id="frm" style="display:inline" onsubmit="return doAJAXSubmit(this);"> 
                <fieldset>
                    <legend onclick="showHideDiv('tblSearch')" style="cursor:pointer">
                    &nbsp;<img id="tblSearchImg" src="@Url.Content("~/Content/Images/aroB.gif")" alt="Show/Hide panel" />
                    &nbsp;Search&nbsp;</legend>
                <table id="tblSearch" width="100%" cellpadding="5" cellspacing="5">
                    <tr>
                        <td nowrap="nowrap" width="5%">PO #</td>
                        <td>
                            @*<%= Html.TextBox("PONumber1", dSearch.PONumber1)%>*@
                            @Html.TextBox("PONumbers", dSearch.PONumbers, new{title1="Enter single or comma separated multiple values",
                                                                            data_bind = "value:search.PONumbers"
                       })
                        </td>
                        <td nowrap="nowrap" width="5%">Status</td>
                        <td>
                            @Html.DropDownList("OrderStatusID", new SelectList((IEnumerable)ViewData["Status"], "id", "value", dSearch.OrderStatusID), " ", new { @class = "dropDown", data_bind = "value:search.OrderStatusID" })
                        </td>
                        <td nowrap="nowrap">Vendor</td>
                        <td>
                        @Html.TextBox("VendorName", dSearch.VendorName, new { data_bind = "value:search.VendorName" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "VendorName"))@Html.Hidden("VendorID", dSearch.VendorID)                            
                        </td>                        
                    </tr>
                    <tr>
                        <td nowrap="nowrap">PO Date From</td>
                        <td>
                            @Html.TextBox("PODateFrom1", dSearch.PODateFrom.HasValue ? dSearch.PODateFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.PODateFrom" })
                            @Html.Hidden("PODateFrom", dSearch.PODateFrom.HasValue ? dSearch.PODateFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                        </td>
                        <td nowrap="nowrap">PO Date To</td>
                        <td>
                            @Html.TextBox("PODateTo1", dSearch.PODateTo.HasValue ? dSearch.PODateTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.PODateTo" })
                            @Html.Hidden("PODateTo", dSearch.PODateTo.HasValue ? dSearch.PODateTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                        </td>
                        <td nowrap="nowrap">Brand</td>
                        <td valign="top" nowrap="nowrap">                            
                        @Html.TextBox("BrandName", dSearch.BrandName, new { data_bind = "value:search.BrandName" })&nbsp;@Html.Raw(string.Format(Defaults.lookupImgBtn, "BrandName"))@Html.Hidden("BrandID", dSearch.BrandID)                        
                        </td>                        
                    </tr>
                    <tr>
                        <td nowrap="nowrap">ETA From</td>
                        <td>
                            @Html.TextBox("ETAFrom1", dSearch.ETAFrom.HasValue ? dSearch.ETAFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETAFrom" })
                            @Html.Hidden("ETAFrom", dSearch.ETAFrom.HasValue ? dSearch.ETAFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                        </td>
                        <td nowrap="nowrap">ETA To</td>
                        <td>
                            @Html.TextBox("ETATo1", dSearch.ETATo.HasValue ? dSearch.ETATo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETATo" })
                            @Html.Hidden("ETATo", dSearch.ETATo.HasValue ? dSearch.ETATo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                        </td>
                        <td nowrap="nowrap" width="5%">Assigned To</td>
                        <td valign="bottom" nowrap="nowrap">
                            @Html.DropDownList("AssignTo", new SelectList((IEnumerable)ViewData["UserList"], "id", "value", dSearch.AssignTo.HasValue?dSearch.AssignTo.Value: -1), " ", new { @class = "dropDown", data_bind = "value:search.AssignTo" })
                        </td>                         
                    </tr>
                    <tr>
                        <td nowrap="nowrap">ETD From</td>
                        <td>
                            @Html.TextBox("ETDFrom1", dSearch.ETDFrom.HasValue ? dSearch.ETDFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETDFrom" })
                            @Html.Hidden("ETDFrom", dSearch.ETDFrom.HasValue ? dSearch.ETDFrom.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                        </td>
                        <td nowrap="nowrap">ETD To</td>
                        <td>
                            @Html.TextBox("ETDTo1", dSearch.ETDTo.HasValue ? dSearch.ETDTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "", new { data_bind = "value:search.ETDTo" })
                            @Html.Hidden("ETDTo", dSearch.ETDTo.HasValue ? dSearch.ETDTo.Value.ToString(Defaults.dtFormat, Defaults.ci) : "")
                        </td>
                        <td nowrap="nowrap">Ship To City</td>
                        <td valign="middle" nowrap="nowrap">
                        @Html.TextBox("ShipToCity", dSearch.ShipToCity,new { data_bind = "value:search.ShipToCity"})
                        </td>                        
                    </tr>
                    <tr>
                        <td colspan="6" align="right">                        
                        <input type="submit" value="Search" class="button" id="btnsearch" />
                <input type="submit" value="Reset" class="button" onclick="resetForm(this);" />
                <input type="checkbox" name="doReset" id="doReset" style="display: none;" />                
                @if (true || Model.Count > 0) {//Kept for ref 
                <input type="button" value="Export to Excel" class="button" onclick="document.getElementById('btnExcel').click();return false;"
                data-bind = "enable: (filteredRecords().length > 0)"
                 />                  
                }               
                        </td>
                    </tr>
                </table>                
                </fieldset>
                </form>
            <!-- END: Search Panel -->
            </td>
        </tr>                
        <tr>
            <td colspan="3">  
            <div id="tdGrid">
                @*@Html.RenderPartial("./KO/ListVendor", Model); *@
                        @{ Html.RenderPartial("KO/" +
                               (_Session.IsOnlyVendor ? "ListVendor" : "ListInternal"),
                               new ViewDataDictionary { { "gridPageSize", ViewData["gridPageSize"] } }); }
             </div>
            </td>
        </tr>
    </table>    
    
<script language="javascript" type="text/javascript" defer="defer">
    // For future manipulation: $('div.pager').children('a').click(function () {@Defaults.chkCollapse }); // Add event to each page link to check & persist collapse search panel

        //var autoCompMinLen = 2; - now available in common.js
        function callAutoComplete(source, ctrl, IDctrl) {
            //Invoke auto-complete
            renderAutoComplete("@Defaults.commonRoot/Lookup?id=" + source, IDctrl, ctrl);// idBox, txtBox);
        }

    $().ready(function() {
    setFocus("PONumbers");
    doCollapse(); //If url has collapse
        
        //AJAXify form
        //doAjaxForm('#frm', '#tdGrid', '#doReset');

        callAutoComplete("Brand", "#BrandName", "#BrandID");
        callAutoComplete("Vendor", "#VendorName", "#VendorID");
        
        // Configure Date picker plugin
        createToFromjQDTP("PODateFrom", "PODateTo");
        createToFromjQDTP("ETDFrom", "ETDTo");
        createToFromjQDTP("ETAFrom", "ETATo");
    });
    
    //Required to show/hide search-panel
     var showImgPath = "@Url.Content("~/Content/Images/aroL.gif")"; //"../../Resources/images/aroL.gif";
     var hideImgPath = "@Url.Content("~/Content/Images/aroB.gif")";// "../../Resources/images/aroB.gif";
        
    function showDialog(action, poID) {
        var containerID = "#dialog" + poID;
        $(containerID).dialog({
            modal: false,
            open: function() {
             $(this).html(loading);
             $(this).load('@Url.Content("~/Dashboard/")' + action + '?POID=' + poID);//+ '&Archived=' + archived
            },
            height: 360,
            width: 650,
            title: action,
            close: function(event, ui) { //NOTE: Required so that multiple dialog controls can be references with the same id
            $(this).dialog("destroy").empty();}//Can't use .remove() as in SO: 6515052 so we empty the html.
        });
    }
    
   var lastTR = "#tblStatusHistory tbody>tr:last";
   var oldStat = "#OldStatus", oldStatID = "#OldStatusID", newStat = "#NewStatus", newStatID = "#NewStatusID";
   function changePOStatusPost(POId, OldStatusID, NewStatusID) {
            var data = {}; //Set data to be posted back
            data["POId"] = POId;  data["OldStatusID"] = OldStatusID;  data["NewStatusID"] = NewStatusID;
            
            var url = '@Url.Action("ChangePOStatus", "PO", new { POID = -99 })'.replace('-99',POId);
            $.post(url, data);
                         
            return false; // prevent any postback
        }
        var poObj = "";//will be set whn the cell is clicked
   function updateStatusHistory(){
        //clone and insert the tr after the table
        $(lastTR).clone(true).insertAfter(lastTR);        
        //Update data
        $(lastTR).find('td:first').html('@_SessionUsr.UserName');
        
        $(lastTR).find('td:first').next().html('@DateTime.Now.ToString(Defaults.dtFormat, Defaults.ci)');
        $(lastTR).find('td:last').prev().html($(oldStat).val());
        $(lastTR).find('td:last').html($(newStatID).children("option:selected").text());
        
        $(lastTR).effect('highlight', {}, 1000); //highlight
        
        //persist updated status in textbox
        $(oldStatID).val($(newStatID).val());
        $(oldStat).val($(newStatID).children("option:selected").text());
        //update in Grid (NOTE: make sure 'poObj' is set when td is clicked
        //$(poObj).html($(oldStat).val()); $(poObj).effect('highlight', {}, 2000); //highlight
        @*$("#status" + poObj.ID).val($(oldStat).val()).trigger("change");
        $("#statusID" + poObj.ID).val($(newStatID).val()).trigger("change");*@
        $("#statusDIV" + poObj.ID).text($(oldStat).val()).trigger("change").effect('highlight', {}, 2000);
        poObj.Status = $(oldStat).val(); poObj.OrderStatusID = $(newStatID).val();        
   }    
</script>
<script language="javascript" type="text/javascript" defer="defer">
    var ListURL = '@Html.Raw(@Url.Action("POListKO", "Dashboard", new { index = 0, fetchAll = true }))';
    function doAJAXSubmit(frm) {
        vm_D.invokeSearch(1);
        return false;        
    }
    
    //var vm_D = new poListModel();
    var vm_D = new viewModel();
    function createKO() {
        showDlg(true);
        $.getJSON(ListURL, function (data) {
            showDlg(false);
            //vm_D.POs = ko.observableArray(data); // Initial items
            vm_D.fields(data.records);
            vm_D.search = ko.mapping.fromJS(data.search); // Otherwise the search button will be needed
            @*vm_D.quickSearch("");*@
            vm_D.invokeSearch(2);
            ko.applyBindings(vm_D);
            //pagedGrid.DisplayFields(data);

            setFocus("PONumbers");
        });
    }
    var skipCommitChk = false;
    $(document).ready(function () {
        createKO();
        @*//bind event to check po commit*@
        window.onbeforeunload = function(e){  
        var orderBy = (vm_D.sortField() != null)? (vm_D.sortField() + " " + (vm_D.sortOrderNxtAsc()?"Desc":"Asc")) : "";
           if(skipCommitChk){skipCommitChk = false; return;}
            $.ajax({
            type: "POST",
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",
            data: $("#frm").serialize(),
            url: ListURL + ((orderBy!="")?("&orderBy=" + orderBy) : "")
            ,async : false // SO: 14645011 (for FF to ensure the postback is not
            @*,success: function (data) {
                if (data != null) {
                    alert(data);
                    /*//vm_D.fields.removeAll();
                    vm_D.pageIndex(0);  self.cachedPagesTill(0);
                    vm_D.fields(data.records);
                    vm_D.search(data.search);
                    document.getElementById('doReset').checked = false;*/             
                }
            }*@
        });  
         
        };
    });

    function resetForm(btn) 
    {
        clearForm(document.getElementById('frm'));
        document.getElementById('doReset').checked = true;
        resetDatepicker('#PODateFrom1, #PODateTo1');

        //trigger changePOStatusPost for KO binding notification
        vm_D.search.PONumbers(null);
        vm_D.search.OrderStatusID(0);
        vm_D.search.AssignTo(0);
        vm_D.search.VendorName(null);
        vm_D.search.BrandName(null);
        vm_D.search.ShipToCity(null);
        
        vm_D.search.PODateFrom(null);
        vm_D.search.PODateTo(null);        
        vm_D.search.ETAFrom(null);
        vm_D.search.ETATo(null);        
        vm_D.search.ETDFrom(null);
        vm_D.search.ETDTo(null);        
    }      

    function excelPostback(e)
    {
        skipCommitChk = true;
        $.ajax({
            type: "POST",
            //contentType: "application/json; charset=utf-8",
            //dataType: "json",
            data: $("#frm").serialize(),
            url: '@Html.Raw(@Url.Action("SetSearchOpts", "Dashboard"))',
            success: function (data) {
                $("#frmExcel").submit();
            }
        });
        return false; // to cause form postback
    }    
    </script>
@*HT: Set min width required by Dashboard*@
<img src="@Url.Content("~/Content/Images/spacer.gif")" height="1px" width="900px" />
<script src="@Url.Content("~/Content/Scripts/jquery.taconite.js")" type="text/javascript" ></script>